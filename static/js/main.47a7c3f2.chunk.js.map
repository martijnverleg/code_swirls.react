{"version":3,"sources":["components/trishape.js","components/background.js","Header.js","index.js"],"names":["TriShape","size","Object","classCallCheck","this","scale","rotation","points","background","p5","maxTriShapesize","triShapes","canvasWidth","windowWidth","canvasHeight","windowHeight","generateTriShape","maxSize","centerPoints","a","createVector","b","c","x","cos","y","sin","generateTriangle","forEach","point","push","setup","createCanvas","angleMode","DEGREES","frameRate","noFill","strokeWeight","stroke","i","draw","triShape","scaleAdder","mouseY","rotationMultiplier","mouseX","rotationX","rotationY","length","splice","unshift","translate","rotate","beginShape","vertex","endShape","CLOSE","pop","Header","react_default","createElement","className","P5Wrapper_default","sketch","Component","ReactDOM","render","src_Header","document","getElementById"],"mappings":"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","file":"static/js/main.47a7c3f2.chunk.js","sourcesContent":["class TriShape {\n  constructor(size) {\n    this.scale = size;\n    this.rotation = 0;\n    this.points = [];\n  }\n}\nexport default TriShape;\n","import TriShape from './trishape';\n\nfunction background(p5) {\n  const triShapes = [];\n  let maxTriShapesize;\n\n  const canvasWidth = p5.windowWidth;\n  const canvasHeight = p5.windowHeight;\n\n  p5.setup = function() {\n    p5.createCanvas(canvasWidth, canvasHeight);\n\n    p5.angleMode(p5.DEGREES);\n    p5.frameRate(30);\n    p5.background(255, 255, 255);\n\n    p5.noFill();\n    p5.strokeWeight(15);\n    p5.stroke(200);\n\n    maxTriShapesize = calcTriangleHeight();\n\n    for (let i = 0; i < 25; i++) {\n      triShapes.push(new TriShape((1 / 25) * i));\n      triShapes[i].points = triShapes[i].points = generateTriShape(maxTriShapesize);\n    }\n  };\n\n  p5.draw = function() {\n    p5.background(0);\n\n    let scaleAdder = (0.001 / canvasHeight) * p5.mouseY + 0.0015;\n    let rotationMultiplier = (48 / canvasWidth) * p5.mouseX - 24;\n\n    if (p5.rotationX != null && p5.rotationX !== 0) {\n      scaleAdder = 0.0025 - (0.005 / 360) * p5.rotationX;\n      rotationMultiplier = p5.rotationY;\n    }\n\n    for (let i = 0; i < triShapes.length; i++) {\n      if (triShapes[i].scale > 1) {\n        triShapes.splice(i, 1);\n        triShapes.unshift(new TriShape(0));\n        triShapes[0].points = triShapes[i].points = generateTriShape(maxTriShapesize);\n      }\n      triShapes[i].scale += scaleAdder;\n      triShapes[i].rotation = rotationMultiplier * triShapes[i].scale;\n\n      showTriShape(triShapes[i]);\n    }\n  };\n\n  function calcTriangleHeight() {\n    const aspectRatio = p5.windowWidth / p5.windowHeight;\n    const triangleRatio = (1 / (aspectRatio - 0.13)) * 0.64 + 1.26;\n\n    return (triangleRatio * p5.windowWidth) / 1.4;\n  }\n\n  function generateTriangle(maxSize) {\n    const a = p5.createVector(0, - maxSize);\n    const b = p5.createVector(0, 0);\n    const c = p5.createVector(0, 0);\n\n    b.x = a.x * p5.cos(120) - a.y * p5.sin(120);\n    b.y = a.x * p5.sin(120) + a.y * p5.cos(120);\n\n    c.x = a.x * p5.cos(240) - a.y * p5.sin(240);\n    c.y = a.x * p5.sin(240) + a.y * p5.cos(240);\n\n    return [a, b, c,];\n  }\n\n  function generateTriShape(maxSize) {\n    const centerPoints = generateTriangle(maxSize * 0.75);\n    const points = [];\n\n    centerPoints.forEach(function(point) {\n      const a = p5.createVector(0, 0);\n      const b = p5.createVector(0, 0);\n      \n      a.x = point.x * p5.cos(-15) - point.y * p5.sin(-15);\n      a.y = point.x * p5.sin(-15) + point.y * p5.cos(-15);\n  \n      b.x = point.x * p5.cos(15) - point.y * p5.sin(15);\n      b.y = point.x * p5.sin(15) + point.y * p5.cos(15);\n\n      points.push(a, b);\n    });\n\n    return points;\n  }\n\n  function showTriShape(triShape) {\n    p5.push();\n\n    p5.translate(p5.windowWidth / 2, p5.windowHeight / 2);\n    p5.rotate(triShape.rotation);\n    p5.scale(triShape.scale);\n    \n    p5.beginShape();\n    triShape.points.forEach(function(point) {\n      p5.vertex(point.x, point.y);\n    });\n    p5.endShape(p5.CLOSE);\n    \n    p5.pop();\n  } \n}\n\nexport default background;\n","import React, { Component } from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport background from './components/background';\nimport './scss/header.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n            <h1 className=\"header__title\">Code_Swirls</h1>\n            <span className=\"header__subtitle\">Work in progress.</span>\n        </header>\n        <P5Wrapper sketch={background} />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport Header from './Header';\n\nReactDOM.render(<Header />, document.getElementById('root'));"],"sourceRoot":""}